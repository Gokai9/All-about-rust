{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3","program":"/home/yozora/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","atoi","--edition=2018","/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e765c66f0c580c4f","-C","extra-filename=-e765c66f0c580c4f","--out-dir","/home/yozora/Web/rustsq/hello/target/rls/debug/deps","-L","dependency=/home/yozora/Web/rustsq/hello/target/rls/debug/deps","--extern","num_traits=/home/yozora/Web/rustsq/hello/target/rls/debug/deps/libnum_traits-87363744728628aa.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/yozora/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/yozora/Web/rustsq/hello/target/rls/debug/deps/libatoi-e765c66f0c580c4f.rmeta"},"prelude":{"crate_id":{"name":"atoi","disambiguator":[9215493359056572792,0]},"crate_root":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src","external_crates":[{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8877259021289820030,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17664387582334346964,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15777239735188030211,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6931118634603707789,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1836679003453309343,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6793428100253957516,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6886380777913932080,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5166797399405618804,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15081119969799540083,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5636859111603542155,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2398051799168900592,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12087602218788622031,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10390304328721691412,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8054568656405061402,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[525761968053022061,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[6926870891054481868,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[13304424612223349919,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[2957560935054177300,0]}},{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","num":19,"id":{"name":"num_traits","disambiguator":[16880609615359285003,0]}}],"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":0,"byte_end":24901,"line_start":1,"line_end":680,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":0,"byte_end":24901,"line_start":1,"line_end":680,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":78},{"krate":0,"index":87},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":108},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":102},{"krate":0,"index":106}],"decl_id":null,"docs":" A crate for parsing integers directly form ASCII (`[u8]`) without encoding them into utf8\n first. The name is inspired by the famous C function.","sig":null,"attributes":[{"value":"/ A crate for parsing integers directly form ASCII (`[u8]`) without encoding them into utf8","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":0,"byte_end":93,"line_start":1,"line_end":1,"column_start":1,"column_end":94}},{"value":"/ first. The name is inspired by the famous C function.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":94,"byte_end":151,"line_start":2,"line_end":2,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":152,"byte_end":155,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Using `str::from_utf8` and `str::parse`","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":156,"byte_end":199,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/ is likely to be more idiomatic. Use this crate if you want to avoid decoding bytes into utf8","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":200,"byte_end":296,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ (e.g. for performance reasons).","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":297,"byte_end":332,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":333,"byte_end":336,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that if you want to know how much of the input has been used, you can use the","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":337,"byte_end":423,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/ `FromRadix10` trait, for example:","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":424,"byte_end":461,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":462,"byte_end":465,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":466,"byte_end":477,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ use atoi::FromRadix10;","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":478,"byte_end":504,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":505,"byte_end":508,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ /// Return the parsed integer and remaining slice if successful.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":509,"byte_end":577,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ fn atoi_with_rest<I: FromRadix10>(text: &[u8]) -> ((&[u8], Option<I>)) {","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":578,"byte_end":654,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/     match I::from_radix_10(text) {","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":655,"byte_end":693,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/         (_, 0) => (text, None),","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":694,"byte_end":729,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/         (n, used) => (&text[used..], Some(n)),","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":730,"byte_end":780,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":781,"byte_end":790,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":791,"byte_end":796,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":797,"byte_end":804,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2216,"byte_end":2220,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"atoi","qualname":"::atoi","value":"pub fn atoi<I>(&[u8]) -> Option<I> where I: FromRadix10Checked","parent":null,"children":[],"decl_id":null,"docs":" Parses an integer from a slice.","sig":null,"attributes":[{"value":"/ Parses an integer from a slice.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1006,"byte_end":1041,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1042,"byte_end":1045,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Contrary to its 'C' counterpart atoi is generic and will require a type argument if the type","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1046,"byte_end":1142,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"/ inference can not determine its result.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1143,"byte_end":1186,"line_start":35,"line_end":35,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1187,"byte_end":1190,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1191,"byte_end":1204,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1205,"byte_end":1208,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1209,"byte_end":1216,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use atoi::atoi;","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1217,"byte_end":1236,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/ // Parsing to digits from a slice","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1237,"byte_end":1274,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(Some(42), atoi::<u32>(b\"42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1275,"byte_end":1320,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/ // Additional bytes after the number are ignored. If you want to know how many bytes were used","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1321,"byte_end":1419,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"/ // to parse the number use `FromRadix10::from_radix_10`.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1420,"byte_end":1480,"line_start":44,"line_end":44,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(Some(42), atoi::<u32>(b\"42 is the answer to life, the universe and everything\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1481,"byte_end":1577,"line_start":45,"line_end":45,"column_start":1,"column_end":97}},{"value":"/ // `None` is returned if the slice does not start with a digit","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1578,"byte_end":1644,"line_start":46,"line_end":46,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(None, atoi::<u32>(b\"Sadly we do not know the question\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1645,"byte_end":1717,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/ // While signed integer types are supported...","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1718,"byte_end":1768,"line_start":48,"line_end":48,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(Some(42), atoi::<i32>(b\"42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1769,"byte_end":1814,"line_start":49,"line_end":49,"column_start":1,"column_end":46}},{"value":"/ // ... signs currently are not (subject to change in future versions)","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1815,"byte_end":1888,"line_start":50,"line_end":50,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(None, atoi::<i32>(b\"-42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1889,"byte_end":1931,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/ // Leading zeros are allowed","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1932,"byte_end":1964,"line_start":52,"line_end":52,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(Some(42), atoi::<u32>(b\"0042\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":1965,"byte_end":2012,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/ // Overflows will return `None`","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2013,"byte_end":2048,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(None, atoi::<u8>(b\"256\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2049,"byte_end":2090,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2091,"byte_end":2098,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2099,"byte_end":2102,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Return","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2103,"byte_end":2115,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2116,"byte_end":2119,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Returns a a number if the slice started with a number, otherwise `None` is returned.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2120,"byte_end":2208,"line_start":60,"line_end":60,"column_start":1,"column_end":89}}]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2511,"byte_end":2522,"line_start":72,"line_end":72,"column_start":11,"column_end":22},"name":"FromRadix10","qualname":"::FromRadix10","value":"FromRadix10: Sized","parent":null,"children":[{"krate":0,"index":50}],"decl_id":null,"docs":" Types implementing this trait can be parsed from a positional numeral system with radix 10\n","sig":null,"attributes":[{"value":"/ Types implementing this trait can be parsed from a positional numeral system with radix 10","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2406,"byte_end":2500,"line_start":71,"line_end":71,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3681,"byte_end":3694,"line_start":98,"line_end":98,"column_start":8,"column_end":21},"name":"from_radix_10","qualname":"::FromRadix10::from_radix_10","value":"pub fn from_radix_10(&[u8]) -> (Self, usize)","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Parses an integer from a slice.","sig":null,"attributes":[{"value":"/ Parses an integer from a slice.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2536,"byte_end":2571,"line_start":73,"line_end":73,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2576,"byte_end":2579,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2584,"byte_end":2597,"line_start":75,"line_end":75,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2602,"byte_end":2605,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2610,"byte_end":2617,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use atoi::FromRadix10;","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2622,"byte_end":2648,"line_start":78,"line_end":78,"column_start":5,"column_end":31}},{"value":"/ // Parsing to digits from a slice","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2653,"byte_end":2690,"line_start":79,"line_end":79,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((42,2), u32::from_radix_10(b\"42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2695,"byte_end":2745,"line_start":80,"line_end":80,"column_start":5,"column_end":55}},{"value":"/ // Additional bytes after the number are ignored","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2750,"byte_end":2802,"line_start":81,"line_end":81,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((42,2), u32::from_radix_10(b\"42 is the answer to life, the universe and everything\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2807,"byte_end":2908,"line_start":82,"line_end":82,"column_start":5,"column_end":106}},{"value":"/ // (0,0) is returned if the slice does not start with a digit","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2913,"byte_end":2978,"line_start":83,"line_end":83,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((0,0), u32::from_radix_10(b\"Sadly we do not know the question\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2983,"byte_end":3063,"line_start":84,"line_end":84,"column_start":5,"column_end":85}},{"value":"/ // While signed integer types are supported...","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3068,"byte_end":3118,"line_start":85,"line_end":85,"column_start":5,"column_end":55}},{"value":"/ assert_eq!((42,2), i32::from_radix_10(b\"42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3123,"byte_end":3173,"line_start":86,"line_end":86,"column_start":5,"column_end":55}},{"value":"/ // Signs are not allowed (even for signed integer types)","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3178,"byte_end":3238,"line_start":87,"line_end":87,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((0,0), i32::from_radix_10(b\"-42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3243,"byte_end":3293,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/ // Leading zeros are allowed","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3298,"byte_end":3330,"line_start":89,"line_end":89,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((42,4), u32::from_radix_10(b\"0042\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3335,"byte_end":3387,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3392,"byte_end":3399,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3404,"byte_end":3407,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3412,"byte_end":3424,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3429,"byte_end":3432,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple with two numbers. The first is the integer parsed or zero, the second is the","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3437,"byte_end":3533,"line_start":95,"line_end":95,"column_start":5,"column_end":101}},{"value":"/ index of the byte right after the parsed number. If the second element is zero the slice","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3538,"byte_end":3630,"line_start":96,"line_end":96,"column_start":5,"column_end":97}},{"value":"/ did not start with an ASCII digit.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3635,"byte_end":3673,"line_start":97,"line_end":97,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3912,"byte_end":3930,"line_start":103,"line_end":103,"column_start":11,"column_end":29},"name":"FromRadix10Checked","qualname":"::FromRadix10Checked","value":"FromRadix10Checked: FromRadix10","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" Types implementing this trait can be parsed from a positional numeral system with radix 10.\n Acts much like `FromRadix10`, but performs additional checks for overflows.\n","sig":null,"attributes":[{"value":"/ Types implementing this trait can be parsed from a positional numeral system with radix 10.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3726,"byte_end":3821,"line_start":101,"line_end":101,"column_start":1,"column_end":96}},{"value":"/ Acts much like `FromRadix10`, but performs additional checks for overflows.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3822,"byte_end":3901,"line_start":102,"line_end":102,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5408,"byte_end":5429,"line_start":132,"line_end":132,"column_start":8,"column_end":29},"name":"from_radix_10_checked","qualname":"::FromRadix10Checked::from_radix_10_checked","value":"pub fn from_radix_10_checked(&[u8]) -> (Option<Self>, usize)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Parses an integer from a slice.","sig":null,"attributes":[{"value":"/ Parses an integer from a slice.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3950,"byte_end":3985,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3990,"byte_end":3993,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3998,"byte_end":4011,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4016,"byte_end":4019,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4024,"byte_end":4031,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use atoi::FromRadix10Checked;","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4036,"byte_end":4069,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/ // Parsing to digits from a slice","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4074,"byte_end":4111,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((Some(42),2), u32::from_radix_10_checked(b\"42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4116,"byte_end":4180,"line_start":111,"line_end":111,"column_start":5,"column_end":69}},{"value":"/ // Additional bytes after the number are ignored","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4185,"byte_end":4237,"line_start":112,"line_end":112,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((Some(42),2), u32::from_radix_10_checked(b\"42 is the answer to life, the universe and everything\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4242,"byte_end":4357,"line_start":113,"line_end":113,"column_start":5,"column_end":120}},{"value":"/ // (0,0) is returned if the slice does not start with a digit","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4362,"byte_end":4427,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((Some(0),0), u32::from_radix_10_checked(b\"Sadly we do not know the question\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4432,"byte_end":4526,"line_start":115,"line_end":115,"column_start":5,"column_end":99}},{"value":"/ // While signed integer types are supported...","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4531,"byte_end":4581,"line_start":116,"line_end":116,"column_start":5,"column_end":55}},{"value":"/ assert_eq!((Some(42),2), i32::from_radix_10_checked(b\"42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4586,"byte_end":4650,"line_start":117,"line_end":117,"column_start":5,"column_end":69}},{"value":"/ // Signs are not allowed (even for signed integer types)","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4655,"byte_end":4715,"line_start":118,"line_end":118,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((Some(0),0), i32::from_radix_10_checked(b\"-42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4720,"byte_end":4784,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/ // Leading zeros are allowed","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4789,"byte_end":4821,"line_start":120,"line_end":120,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((Some(42),4), u32::from_radix_10_checked(b\"0042\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4826,"byte_end":4892,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ // Overflow is indicated by `None`","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4897,"byte_end":4935,"line_start":122,"line_end":122,"column_start":5,"column_end":43}},{"value":"/ assert_eq!((None, 3), u8::from_radix_10_checked(b\"256\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":4940,"byte_end":5001,"line_start":123,"line_end":123,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5006,"byte_end":5013,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5018,"byte_end":5021,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5026,"byte_end":5038,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5043,"byte_end":5046,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple with two numbers. The first is the integer parsed or zero if no digit has","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5051,"byte_end":5144,"line_start":128,"line_end":128,"column_start":5,"column_end":98}},{"value":"/ been found. None, if there were too many, or too high dighits and the parsing overflowed.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5149,"byte_end":5242,"line_start":129,"line_end":129,"column_start":5,"column_end":98}},{"value":"/ The second is the index of the byte right after the parsed number. If the second element is","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5247,"byte_end":5342,"line_start":130,"line_end":130,"column_start":5,"column_end":100}},{"value":"/ zero the slice did not start with an ASCII digit.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5347,"byte_end":5400,"line_start":131,"line_end":131,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":53},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5574,"byte_end":5585,"line_start":136,"line_end":136,"column_start":11,"column_end":22},"name":"FromRadix16","qualname":"::FromRadix16","value":"FromRadix16: Sized","parent":null,"children":[{"krate":0,"index":54}],"decl_id":null,"docs":" Types implementing this trait can be parsed from a positional numeral system with radix 16\n","sig":null,"attributes":[{"value":"/ Types implementing this trait can be parsed from a positional numeral system with radix 16","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5469,"byte_end":5563,"line_start":135,"line_end":135,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6837,"byte_end":6850,"line_start":164,"line_end":164,"column_start":8,"column_end":21},"name":"from_radix_16","qualname":"::FromRadix16::from_radix_16","value":"pub fn from_radix_16(&[u8]) -> (Self, usize)","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Parses an integer from a slice.","sig":null,"attributes":[{"value":"/ Parses an integer from a slice.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5599,"byte_end":5634,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5639,"byte_end":5642,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5647,"byte_end":5660,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5665,"byte_end":5668,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5673,"byte_end":5680,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use atoi::FromRadix16;","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5685,"byte_end":5711,"line_start":142,"line_end":142,"column_start":5,"column_end":31}},{"value":"/ // Parsing to digits from a slice","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5716,"byte_end":5753,"line_start":143,"line_end":143,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((42,2), u32::from_radix_16(b\"2a\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5758,"byte_end":5808,"line_start":144,"line_end":144,"column_start":5,"column_end":55}},{"value":"/ // Additional bytes after the number are ignored","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5813,"byte_end":5865,"line_start":145,"line_end":145,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((42,2), u32::from_radix_16(b\"2a is the answer to life, the universe and everything\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5870,"byte_end":5971,"line_start":146,"line_end":146,"column_start":5,"column_end":106}},{"value":"/ // (0,0) is returned if the slice does not start with a digit","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5976,"byte_end":6041,"line_start":147,"line_end":147,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((0,0), u32::from_radix_16(b\"Sadly we do not know the question\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6046,"byte_end":6126,"line_start":148,"line_end":148,"column_start":5,"column_end":85}},{"value":"/ // While signed integer types are supported...","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6131,"byte_end":6181,"line_start":149,"line_end":149,"column_start":5,"column_end":55}},{"value":"/ assert_eq!((42,2), i32::from_radix_16(b\"2a\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6186,"byte_end":6236,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/ // Signs are not allowed (even for signed integer types)","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6241,"byte_end":6301,"line_start":151,"line_end":151,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((0,0), i32::from_radix_16(b\"-2a\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6306,"byte_end":6356,"line_start":152,"line_end":152,"column_start":5,"column_end":55}},{"value":"/ // Leading zeros are allowed","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6361,"byte_end":6393,"line_start":153,"line_end":153,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((42,4), u32::from_radix_16(b\"002a\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6398,"byte_end":6450,"line_start":154,"line_end":154,"column_start":5,"column_end":57}},{"value":"/ // so are uppercase letters","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6455,"byte_end":6486,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/ assert_eq!((42,4), u32::from_radix_16(b\"002A\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6491,"byte_end":6543,"line_start":156,"line_end":156,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6548,"byte_end":6555,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6560,"byte_end":6563,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6568,"byte_end":6580,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6585,"byte_end":6588,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple with two numbers. The first is the integer parsed or zero, the second is the","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6593,"byte_end":6689,"line_start":161,"line_end":161,"column_start":5,"column_end":101}},{"value":"/ index of the byte right after the parsed number. If the second element is zero the slice","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6694,"byte_end":6786,"line_start":162,"line_end":162,"column_start":5,"column_end":97}},{"value":"/ did not start with an ASCII digit.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6791,"byte_end":6829,"line_start":163,"line_end":163,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":55},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7068,"byte_end":7086,"line_start":169,"line_end":169,"column_start":11,"column_end":29},"name":"FromRadix16Checked","qualname":"::FromRadix16Checked","value":"FromRadix16Checked: FromRadix16","parent":null,"children":[{"krate":0,"index":56}],"decl_id":null,"docs":" Types implementing this trait can be parsed from a positional numeral system with radix 16.\n Acts much like `FromRadix16`, but performs additional checks for overflows.\n","sig":null,"attributes":[{"value":"/ Types implementing this trait can be parsed from a positional numeral system with radix 16.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6882,"byte_end":6977,"line_start":167,"line_end":167,"column_start":1,"column_end":96}},{"value":"/ Acts much like `FromRadix16`, but performs additional checks for overflows.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":6978,"byte_end":7057,"line_start":168,"line_end":168,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8569,"byte_end":8590,"line_start":199,"line_end":199,"column_start":8,"column_end":29},"name":"from_radix_16_checked","qualname":"::FromRadix16Checked::from_radix_16_checked","value":"pub fn from_radix_16_checked(&[u8]) -> (Option<Self>, usize)","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" Parses an integer from a slice.","sig":null,"attributes":[{"value":"/ Parses an integer from a slice.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7106,"byte_end":7141,"line_start":170,"line_end":170,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7146,"byte_end":7149,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7154,"byte_end":7167,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7172,"byte_end":7175,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7180,"byte_end":7187,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ use atoi::FromRadix16Checked;","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7192,"byte_end":7225,"line_start":175,"line_end":175,"column_start":5,"column_end":38}},{"value":"/ // Parsing to digits from a slice","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7230,"byte_end":7267,"line_start":176,"line_end":176,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((Some(42),2), u32::from_radix_16_checked(b\"2a\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7272,"byte_end":7336,"line_start":177,"line_end":177,"column_start":5,"column_end":69}},{"value":"/ // Additional bytes after the number are ignored","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7341,"byte_end":7393,"line_start":178,"line_end":178,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((Some(42),2), u32::from_radix_16_checked(b\"2a is the answer to life, the \\","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7398,"byte_end":7487,"line_start":179,"line_end":179,"column_start":5,"column_end":94}},{"value":"/ universe and everything\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7492,"byte_end":7523,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/ // (0,0) is returned if the slice does not start with a digit","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7528,"byte_end":7593,"line_start":181,"line_end":181,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((Some(0),0), u32::from_radix_16_checked(b\"Sadly we do not know the question\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7598,"byte_end":7692,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ // While signed integer types are supported...","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7697,"byte_end":7747,"line_start":183,"line_end":183,"column_start":5,"column_end":55}},{"value":"/ assert_eq!((Some(42),2), i32::from_radix_16_checked(b\"2a\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7752,"byte_end":7816,"line_start":184,"line_end":184,"column_start":5,"column_end":69}},{"value":"/ // Signs are not allowed (even for signed integer types)","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7821,"byte_end":7881,"line_start":185,"line_end":185,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((Some(0),0), i32::from_radix_16_checked(b\"-2a\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7886,"byte_end":7950,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/ // Leading zeros are allowed","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7955,"byte_end":7987,"line_start":187,"line_end":187,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((Some(42),4), u32::from_radix_16_checked(b\"002a\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7992,"byte_end":8058,"line_start":188,"line_end":188,"column_start":5,"column_end":71}},{"value":"/ // So are uppercase letters","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8063,"byte_end":8094,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/ assert_eq!((Some(42),2), u32::from_radix_16_checked(b\"2A\"))","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8099,"byte_end":8162,"line_start":190,"line_end":190,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8167,"byte_end":8174,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8179,"byte_end":8182,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8187,"byte_end":8199,"line_start":193,"line_end":193,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8204,"byte_end":8207,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple with two numbers. The first is the integer parsed or zero if no digit has","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8212,"byte_end":8305,"line_start":195,"line_end":195,"column_start":5,"column_end":98}},{"value":"/ been found. None, if there were too many, or too high dighits and the parsing overflowed.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8310,"byte_end":8403,"line_start":196,"line_end":196,"column_start":5,"column_end":98}},{"value":"/ The second is the index of the byte right after the parsed number. If the second element is","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8408,"byte_end":8503,"line_start":197,"line_end":197,"column_start":5,"column_end":100}},{"value":"/ zero the slice did not start with an ASCII digit.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8508,"byte_end":8561,"line_start":198,"line_end":198,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8886,"byte_end":8903,"line_start":205,"line_end":205,"column_start":11,"column_end":28},"name":"FromRadix10Signed","qualname":"::FromRadix10Signed","value":"FromRadix10Signed: Sized","parent":null,"children":[{"krate":0,"index":58}],"decl_id":null,"docs":" Types implementing this trait can be parsed from a positional numeral system with radix 10. This\n trait allows for an additional sign character (`+` or `-`) in front of the actual number in\n order, to allow for parsing negative values.\n","sig":null,"attributes":[{"value":"/ Types implementing this trait can be parsed from a positional numeral system with radix 10. This","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8630,"byte_end":8730,"line_start":202,"line_end":202,"column_start":1,"column_end":101}},{"value":"/ trait allows for an additional sign character (`+` or `-`) in front of the actual number in","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8731,"byte_end":8826,"line_start":203,"line_end":203,"column_start":1,"column_end":96}},{"value":"/ order, to allow for parsing negative values.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8827,"byte_end":8875,"line_start":204,"line_end":204,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10147,"byte_end":10167,"line_start":233,"line_end":233,"column_start":8,"column_end":28},"name":"from_radix_10_signed","qualname":"::FromRadix10Signed::from_radix_10_signed","value":"pub fn from_radix_10_signed(&[u8]) -> (Self, usize)","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Parses an integer from a slice.","sig":null,"attributes":[{"value":"/ Parses an integer from a slice.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8917,"byte_end":8952,"line_start":206,"line_end":206,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8957,"byte_end":8960,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8965,"byte_end":8978,"line_start":208,"line_end":208,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8983,"byte_end":8986,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8991,"byte_end":8998,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ use atoi::FromRadix10Signed;","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9003,"byte_end":9035,"line_start":211,"line_end":211,"column_start":5,"column_end":37}},{"value":"/ // Parsing to digits from a slice","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9040,"byte_end":9077,"line_start":212,"line_end":212,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((42,2), i32::from_radix_10_signed(b\"42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9082,"byte_end":9139,"line_start":213,"line_end":213,"column_start":5,"column_end":62}},{"value":"/ // Additional bytes after the number are ignored","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9144,"byte_end":9196,"line_start":214,"line_end":214,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((42,2), i32::from_radix_10_signed(b\"42 is the answer to life, the universe and everything\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9201,"byte_end":9309,"line_start":215,"line_end":215,"column_start":5,"column_end":113}},{"value":"/ // (0,0) is returned if the slice does not start with a digit","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9314,"byte_end":9379,"line_start":216,"line_end":216,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((0,0), i32::from_radix_10_signed(b\"Sadly we do not know the question\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9384,"byte_end":9471,"line_start":217,"line_end":217,"column_start":5,"column_end":92}},{"value":"/ // Signs are allowed","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9476,"byte_end":9500,"line_start":218,"line_end":218,"column_start":5,"column_end":29}},{"value":"/ assert_eq!((-42,3), i32::from_radix_10_signed(b\"-42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9505,"byte_end":9564,"line_start":219,"line_end":219,"column_start":5,"column_end":64}},{"value":"/ // Signs are allowed","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9569,"byte_end":9593,"line_start":220,"line_end":220,"column_start":5,"column_end":29}},{"value":"/ assert_eq!((42,3), i32::from_radix_10_signed(b\"+42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9598,"byte_end":9656,"line_start":221,"line_end":221,"column_start":5,"column_end":63}},{"value":"/ // Even on unsigned types.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9661,"byte_end":9691,"line_start":222,"line_end":222,"column_start":5,"column_end":35}},{"value":"/ assert_eq!((0,2), u32::from_radix_10_signed(b\"-0\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9696,"byte_end":9752,"line_start":223,"line_end":223,"column_start":5,"column_end":61}},{"value":"/ // Leading zeros are allowed","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9757,"byte_end":9789,"line_start":224,"line_end":224,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((42,4), i32::from_radix_10_signed(b\"0042\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9794,"byte_end":9853,"line_start":225,"line_end":225,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9858,"byte_end":9865,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9870,"byte_end":9873,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9878,"byte_end":9890,"line_start":228,"line_end":228,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9895,"byte_end":9898,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple with two numbers. The first is the integer parsed or zero, the second is the","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":9903,"byte_end":9999,"line_start":230,"line_end":230,"column_start":5,"column_end":101}},{"value":"/ index of the byte right after the parsed number. If the second element is zero the slice","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10004,"byte_end":10096,"line_start":231,"line_end":231,"column_start":5,"column_end":97}},{"value":"/ did not start with an ASCII digit.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10101,"byte_end":10139,"line_start":232,"line_end":232,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":59},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10391,"byte_end":10415,"line_start":238,"line_end":238,"column_start":11,"column_end":35},"name":"FromRadix10SignedChecked","qualname":"::FromRadix10SignedChecked","value":"FromRadix10SignedChecked: FromRadix10Signed","parent":null,"children":[{"krate":0,"index":60}],"decl_id":null,"docs":" Types implementing this trait can be parsed from a positional numeral system with radix 10.\n Acts much like `FromRadix10Signed`, but performs additional checks for overflows.\n","sig":null,"attributes":[{"value":"/ Types implementing this trait can be parsed from a positional numeral system with radix 10.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10199,"byte_end":10294,"line_start":236,"line_end":236,"column_start":1,"column_end":96}},{"value":"/ Acts much like `FromRadix10Signed`, but performs additional checks for overflows.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10295,"byte_end":10380,"line_start":237,"line_end":237,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":12325,"byte_end":12353,"line_start":273,"line_end":273,"column_start":8,"column_end":36},"name":"from_radix_10_signed_checked","qualname":"::FromRadix10SignedChecked::from_radix_10_signed_checked","value":"pub fn from_radix_10_signed_checked(&[u8]) -> (Option<Self>, usize)","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Parses an integer from a slice.","sig":null,"attributes":[{"value":"/ Parses an integer from a slice.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10441,"byte_end":10476,"line_start":239,"line_end":239,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10481,"byte_end":10484,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10489,"byte_end":10502,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10507,"byte_end":10510,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10515,"byte_end":10522,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use atoi::FromRadix10SignedChecked;","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10527,"byte_end":10566,"line_start":244,"line_end":244,"column_start":5,"column_end":44}},{"value":"/ // Parsing to digits from a slice","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10571,"byte_end":10608,"line_start":245,"line_end":245,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((Some(42),2), u32::from_radix_10_signed_checked(b\"42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10613,"byte_end":10684,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ // Additional bytes after the number are ignored","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10689,"byte_end":10741,"line_start":247,"line_end":247,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((Some(42),2), u32::from_radix_10_signed_checked(b\"42 is the answer to life, the universe and everything\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10746,"byte_end":10868,"line_start":248,"line_end":248,"column_start":5,"column_end":127}},{"value":"/ // (0,0) is returned if the slice does not start with a digit","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10873,"byte_end":10938,"line_start":249,"line_end":249,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((Some(0),0), u32::from_radix_10_signed_checked(b\"Sadly we do not know the question\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10943,"byte_end":11044,"line_start":250,"line_end":250,"column_start":5,"column_end":106}},{"value":"/ // While signed integer types are supported...","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11049,"byte_end":11099,"line_start":251,"line_end":251,"column_start":5,"column_end":55}},{"value":"/ assert_eq!((Some(42),2), i32::from_radix_10_signed_checked(b\"42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11104,"byte_end":11175,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ // Signs are allowed","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11180,"byte_end":11204,"line_start":253,"line_end":253,"column_start":5,"column_end":29}},{"value":"/ assert_eq!((Some(-42),3), i32::from_radix_10_signed_checked(b\"-42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11209,"byte_end":11282,"line_start":254,"line_end":254,"column_start":5,"column_end":78}},{"value":"/ // Signs even on unsigned types","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11287,"byte_end":11322,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/ assert_eq!((Some(0),2), u32::from_radix_10_signed_checked(b\"-0\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11327,"byte_end":11397,"line_start":256,"line_end":256,"column_start":5,"column_end":75}},{"value":"/ // Negative values for unsigned types are handled as `None`.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11402,"byte_end":11466,"line_start":257,"line_end":257,"column_start":5,"column_end":69}},{"value":"/ assert_eq!((None,3), u32::from_radix_10_signed_checked(b\"-42\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11471,"byte_end":11539,"line_start":258,"line_end":258,"column_start":5,"column_end":73}},{"value":"/ // Leading zeros are allowed","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11544,"byte_end":11576,"line_start":259,"line_end":259,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((Some(42),4), u32::from_radix_10_signed_checked(b\"0042\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11581,"byte_end":11654,"line_start":260,"line_end":260,"column_start":5,"column_end":78}},{"value":"/ // Overflow is indicated by `None`","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11659,"byte_end":11697,"line_start":261,"line_end":261,"column_start":5,"column_end":43}},{"value":"/ assert_eq!((None, 3), u8::from_radix_10_signed_checked(b\"256\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11702,"byte_end":11770,"line_start":262,"line_end":262,"column_start":5,"column_end":73}},{"value":"/ assert_eq!((None, 4), i8::from_radix_10_signed_checked(b\"+128\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11775,"byte_end":11844,"line_start":263,"line_end":263,"column_start":5,"column_end":74}},{"value":"/ assert_eq!((None, 4), i8::from_radix_10_signed_checked(b\"-129\"));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11849,"byte_end":11918,"line_start":264,"line_end":264,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11923,"byte_end":11930,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11935,"byte_end":11938,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11943,"byte_end":11955,"line_start":267,"line_end":267,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11960,"byte_end":11963,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple with two numbers. The first is the integer parsed or zero if no digit has","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":11968,"byte_end":12061,"line_start":269,"line_end":269,"column_start":5,"column_end":98}},{"value":"/ been found. None, if there were too many, or too high dighits and the parsing overflowed.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":12066,"byte_end":12159,"line_start":270,"line_end":270,"column_start":5,"column_end":98}},{"value":"/ The second is the index of the byte right after the parsed number. If the second element is","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":12164,"byte_end":12259,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ zero the slice did not start with an ASCII digit.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":12264,"byte_end":12317,"line_start":272,"line_end":272,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":61},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":12520,"byte_end":12532,"line_start":278,"line_end":278,"column_start":11,"column_end":23},"name":"MaxNumDigits","qualname":"::MaxNumDigits","value":"MaxNumDigits","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"decl_id":null,"docs":" A bounded integer, whose representation can overflow and therefore can only store a maximum\n number of digits\n","sig":null,"attributes":[{"value":"/ A bounded integer, whose representation can overflow and therefore can only store a maximum","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":12393,"byte_end":12488,"line_start":276,"line_end":276,"column_start":1,"column_end":96}},{"value":"/ number of digits","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":12489,"byte_end":12509,"line_start":277,"line_end":277,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":12699,"byte_end":12713,"line_start":281,"line_end":281,"column_start":8,"column_end":22},"name":"max_num_digits","qualname":"::MaxNumDigits::max_num_digits","value":"pub fn max_num_digits(Self) -> usize","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Given a representation with a radix character I, what is the maximum number of digits we can\n parse without the integer overflowing for sure?\n","sig":null,"attributes":[{"value":"/ Given a representation with a radix character I, what is the maximum number of digits we can","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":12539,"byte_end":12635,"line_start":279,"line_end":279,"column_start":5,"column_end":101}},{"value":"/ parse without the integer overflowing for sure?","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":12640,"byte_end":12691,"line_start":280,"line_end":280,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":12862,"byte_end":12885,"line_start":285,"line_end":285,"column_start":8,"column_end":31},"name":"max_num_digits_negative","qualname":"::MaxNumDigits::max_num_digits_negative","value":"pub fn max_num_digits_negative(Self) -> usize","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Returns the maximum number of digits a negative representation of `I` can have depending on\n `radix`.\n","sig":null,"attributes":[{"value":"/ Returns the maximum number of digits a negative representation of `I` can have depending on","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":12742,"byte_end":12837,"line_start":283,"line_end":283,"column_start":5,"column_end":100}},{"value":"/ `radix`.","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":12842,"byte_end":12854,"line_start":284,"line_end":284,"column_start":5,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":13875,"byte_end":13889,"line_start":326,"line_end":326,"column_start":8,"column_end":22},"name":"ascii_to_digit","qualname":"::ascii_to_digit","value":"pub fn ascii_to_digit<I>(u8) -> Option<I> where I: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Converts an ascii character to digit","sig":null,"attributes":[{"value":"/ Converts an ascii character to digit","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":13661,"byte_end":13701,"line_start":317,"line_end":317,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":13702,"byte_end":13705,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":13706,"byte_end":13719,"line_start":319,"line_end":319,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":13720,"byte_end":13723,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":13724,"byte_end":13731,"line_start":321,"line_end":321,"column_start":1,"column_end":8}},{"value":"/ use atoi::ascii_to_digit;","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":13732,"byte_end":13761,"line_start":322,"line_end":322,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(Some(5), ascii_to_digit(b'5'));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":13762,"byte_end":13808,"line_start":323,"line_end":323,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(None, ascii_to_digit::<u32>(b'x'));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":13809,"byte_end":13859,"line_start":324,"line_end":324,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":13860,"byte_end":13867,"line_start":325,"line_end":325,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":109},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22343,"byte_end":22347,"line_start":590,"line_end":590,"column_start":5,"column_end":9},"name":"Plus","qualname":"::Sign::Plus","value":"Sign::Plus","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":111},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22353,"byte_end":22358,"line_start":591,"line_end":591,"column_start":5,"column_end":10},"name":"Minus","qualname":"::Sign::Minus","value":"Sign::Minus","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":108},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22332,"byte_end":22336,"line_start":589,"line_end":589,"column_start":10,"column_end":14},"name":"Sign","qualname":"::Sign","value":"pub enum Sign { Plus, Minus, }","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":111}],"decl_id":null,"docs":" Representation of a numerical sign\n","sig":null,"attributes":[{"value":"/ Representation of a numerical sign","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22239,"byte_end":22277,"line_start":587,"line_end":587,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22694,"byte_end":22702,"line_start":605,"line_end":605,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Sign>::try_from","value":"pub fn try_from(u8) -> Option<Sign>","parent":null,"children":[],"decl_id":null,"docs":" Trys to convert an ascii character into a `Sign`","sig":null,"attributes":[{"value":"/ Trys to convert an ascii character into a `Sign`","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22379,"byte_end":22431,"line_start":595,"line_end":595,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22436,"byte_end":22439,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22444,"byte_end":22457,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22462,"byte_end":22465,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22470,"byte_end":22477,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ use atoi::Sign;","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22482,"byte_end":22501,"line_start":600,"line_end":600,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(Some(Sign::Plus), Sign::try_from(b'+'));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22506,"byte_end":22561,"line_start":601,"line_end":601,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(Some(Sign::Minus), Sign::try_from(b'-'));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22566,"byte_end":22622,"line_start":602,"line_end":602,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(None, Sign::try_from(b'1'));","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22627,"byte_end":22670,"line_start":603,"line_end":603,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22675,"byte_end":22682,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22916,"byte_end":22922,"line_start":614,"line_end":614,"column_start":12,"column_end":18},"name":"signum","qualname":"<Sign>::signum","value":"pub fn signum<I>(Self) -> I where I: Signed","parent":null,"children":[],"decl_id":null,"docs":" Returns either `+1` or `-1`\n","sig":null,"attributes":[{"value":"/ Returns either `+1` or `-1`","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22873,"byte_end":22904,"line_start":613,"line_end":613,"column_start":5,"column_end":36}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":12937,"byte_end":12938,"line_start":288,"line_end":288,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":14322,"byte_end":14323,"line_start":345,"line_end":345,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":14817,"byte_end":14818,"line_start":365,"line_end":365,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":16299,"byte_end":16300,"line_start":414,"line_end":414,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":19379,"byte_end":19380,"line_start":497,"line_end":497,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":20919,"byte_end":20920,"line_start":545,"line_end":545,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":21418,"byte_end":21419,"line_start":565,"line_end":565,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22368,"byte_end":22372,"line_start":594,"line_end":594,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":2524,"byte_end":2529,"line_start":72,"line_end":72,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2885},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":3932,"byte_end":3943,"line_start":103,"line_end":103,"column_start":31,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":49},"to":{"krate":0,"index":51}},{"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":5587,"byte_end":5592,"line_start":136,"line_end":136,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2885},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":7088,"byte_end":7099,"line_start":169,"line_end":169,"column_start":31,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":53},"to":{"krate":0,"index":55}},{"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":8905,"byte_end":8910,"line_start":205,"line_end":205,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2885},"to":{"krate":0,"index":57}},{"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":10417,"byte_end":10434,"line_start":238,"line_end":238,"column_start":37,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":57},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":12937,"byte_end":12938,"line_start":288,"line_end":288,"column_start":26,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":65},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":14322,"byte_end":14323,"line_start":345,"line_end":345,"column_start":25,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":71},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":14817,"byte_end":14818,"line_start":365,"line_end":365,"column_start":31,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":74},"to":{"krate":0,"index":57}},{"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":16299,"byte_end":16300,"line_start":414,"line_end":414,"column_start":38,"column_end":39},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":79},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":19379,"byte_end":19380,"line_start":497,"line_end":497,"column_start":32,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":88},"to":{"krate":0,"index":51}},{"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":20919,"byte_end":20920,"line_start":545,"line_end":545,"column_start":25,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":95},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":21418,"byte_end":21419,"line_start":565,"line_end":565,"column_start":32,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":98},"to":{"krate":0,"index":55}},{"span":{"file_name":"/home/yozora/.cargo/registry/src/github.com-1ecc6299db9ec823/atoi-0.3.3/src/lib.rs","byte_start":22368,"byte_end":22372,"line_start":594,"line_end":594,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":108},"to":{"krate":4294967295,"index":4294967295}}]}