{"message":"unreachable statement","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"libs/neural-network/src/lib.rs","byte_start":2450,"byte_end":2502,"line_start":85,"line_end":85,"column_start":9,"column_end":61,"is_primary":true,"text":[{"text":"        let weights = (0..input).map(|_| todo!()).collect();","highlight_start":9,"highlight_end":61}],"label":"unreachable statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/yozora/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":513,"byte_end":543,"line_start":18,"line_end":18,"column_start":9,"column_end":39,"is_primary":false,"text":[{"text":"        $crate::panicking::panic($msg)","highlight_start":9,"highlight_end":39}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/yozora/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":24629,"byte_end":24666,"line_start":736,"line_end":736,"column_start":12,"column_end":49,"is_primary":false,"text":[{"text":"    () => ($crate::panic!(\"not yet implemented\"));","highlight_start":12,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/yozora/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":24629,"byte_end":24666,"line_start":736,"line_end":736,"column_start":12,"column_end":49,"is_primary":false,"text":[{"text":"    () => ($crate::panic!(\"not yet implemented\"));","highlight_start":12,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"libs/neural-network/src/lib.rs","byte_start":2433,"byte_end":2440,"line_start":84,"line_end":84,"column_start":20,"column_end":27,"is_primary":false,"text":[{"text":"        let bias = todo!();","highlight_start":20,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"todo!","def_site_span":{"file_name":"/home/yozora/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":24598,"byte_end":24768,"line_start":735,"line_end":738,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! todo {","highlight_start":1,"highlight_end":1},{"text":"    () => ($crate::panic!(\"not yet implemented\"));","highlight_start":1,"highlight_end":1},{"text":"    ($($arg:tt)+) => ($crate::panic!(\"not yet implemented: {}\", $crate::format_args!($($arg)+)));","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic!","def_site_span":{"file_name":"/home/yozora/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":303,"byte_end":518,"line_start":8,"line_end":14,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! panic {","highlight_start":1,"highlight_end":21},{"text":"    // Expands to either `$crate::panic::panic_2015` or `$crate::panic::panic_2021`","highlight_start":1,"highlight_end":84},{"text":"    // depending on the edition of the caller.","highlight_start":1,"highlight_end":47},{"text":"    ($($arg:tt)*) => {","highlight_start":1,"highlight_end":23},{"text":"        /* compiler built-in */","highlight_start":1,"highlight_end":32},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/home/yozora/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":382,"byte_end":745,"line_start":13,"line_end":26,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":1},{"text":"    () => (","highlight_start":1,"highlight_end":1},{"text":"        $crate::panicking::panic(\"explicit panic\")","highlight_start":1,"highlight_end":1},{"text":"    ),","highlight_start":1,"highlight_end":1},{"text":"    ($msg:literal $(,)?) => (","highlight_start":1,"highlight_end":1},{"text":"        $crate::panicking::panic($msg)","highlight_start":1,"highlight_end":1},{"text":"    ),","highlight_start":1,"highlight_end":1},{"text":"    ($msg:expr $(,)?) => (","highlight_start":1,"highlight_end":1},{"text":"        $crate::panicking::panic_str($msg)","highlight_start":1,"highlight_end":1},{"text":"    ),","highlight_start":1,"highlight_end":1},{"text":"    ($fmt:expr, $($arg:tt)+) => (","highlight_start":1,"highlight_end":1},{"text":"        $crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))","highlight_start":1,"highlight_end":1},{"text":"    ),","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable statement\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlibs/neural-network/src/lib.rs:85:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let bias = todo!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12many code following this expression is unreachable\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let weights = (0..input).map(|_| todo!()).collect();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `bias`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"libs/neural-network/src/lib.rs","byte_start":2426,"byte_end":2430,"line_start":84,"line_end":84,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let bias = todo!();","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"libs/neural-network/src/lib.rs","byte_start":2426,"byte_end":2430,"line_start":84,"line_end":84,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let bias = todo!();","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"_bias","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bias`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlibs/neural-network/src/lib.rs:84:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let bias = todo!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bias`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `input`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"libs/neural-network/src/lib.rs","byte_start":2390,"byte_end":2395,"line_start":83,"line_end":83,"column_start":15,"column_end":20,"is_primary":true,"text":[{"text":"    fn random(input: usize) -> Self {","highlight_start":15,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"libs/neural-network/src/lib.rs","byte_start":2390,"byte_end":2395,"line_start":83,"line_end":83,"column_start":15,"column_end":20,"is_primary":true,"text":[{"text":"    fn random(input: usize) -> Self {","highlight_start":15,"highlight_end":20}],"label":null,"suggested_replacement":"_input","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `input`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlibs/neural-network/src/lib.rs:83:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn random(input: usize) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_input`\u001b[0m\n\n"}
{"message":"3 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 3 warnings emitted\u001b[0m\n\n"}
